Le rapport du TME 9 de l'UE LRC
KACHAIKIN Ivan
16 / 12 / 2019

Exercice 1
1. Observant le réseau donné on peut supposer qu'il va passer tous les jetons de p3 vers p2 en traversant une transition t1. Ensuite, ce réseau doit passer des jetons de p1 à p3. Après, on attend qu'il retournera les jetons vers p1 et donc il se rentrera dans un marquage initial.
2. En exécutant le simulateur, on peut voir que son fonctionnement est pareil que celui indiqué ci-dessus. On peut faire l'hypothèse ici que le graphe est borné par 6K. De plus, on suppose qu'il est vivant parce que pour toutes ses évolutions possibles on devra atteindre chaque transition. En outre, il semble que ce graphe a tels arcs qui lui vont permettre de se rentrer à l'état initial. Alors on fait aussi l'hypothèse qu'il est réversible.
3. On obtient que toutes nos hypothèses sont bien vérifiées. C'est-à-dire, le graphe donné est bien borné, vivant et réversible.
4. Un remplacement de marquage initial a effectivement permis de faire une simulation plus rapide ne changeant pas le résultat obtenu.
5. Après avoir dessiné le graphe on voit que " tina " construit le graphe de marquage qu'on peut utiliser pour faire l'analyse en main.

Exercice 2
2. Après avoir exécuté cette séquence on a obtenu un résultat attendu : M* = (0, 1, 0, 0).
3. On peut constater qu'on obtient le même graphe qu'au TD.
4. On a une possibilité de conclure qu'un graphe est borné mais pas vivant. De plus, il n'est pas sans blocage. Son marquage puits : (0, 1, 0, 0).
5. Premièrement, on peut vérifier si un réseau est vivant. Si oui, on déduit qu'un réseau est quasi-vivant. Sinon, on doit trouver au moins une évolution du réseau pour chaque transition telle qu'on atteint cette transition. Si on a observé tous les cas possibles mais pour quelque transition particulière on n'a pas trouvé telle séquence qui la contient on peut conclure donc que le réseau donné n'est pas quasi-vivant. Sinon, on a donc un réseau quasi-vivant. En effet, on peut juste observer si toutes les transitions sont présentes dans le graphe d'accessibilité et cela indiquerait qu'un réseau est quasi-vivant.
En outre, pendant l'utilisation de l'analyseur d'accessibilité avec sortie textuelle tina peut marquer quelques transitions comme " dead ". S'il n'y pas telles transitions dans le réseau on a donc celui quasi-vivant.

Exercice 3
2. - on propose un marquage initial suivant : (0, 0, 1, 1); le séquence (t2, t0, t1, t2, ...) permet d'obtenir un marquage pour p2 aussi grand que possible; par conséquent, un réseau est non borné; les transitions vivantes : aucunes (on peut boucler soit sur les transitions t0, t1, t2, soit sur les autres indépendamment);
   - avec un marquage initial (1, 0, 0, 0) on ne pourrait pas " quitter " de ce marquage; le réseau est donc borné par 1 et il y a un blocage; les transitions vivantes : aucunes;
   - avec un marquage initial (0, 0, 1, 0); le réseau est borné par 1, il n'y pas de blocage parce qu'on boucle sur deux (0, 0, 1, 0) et (0, 0, 0, 1), il est réversible parce qu'on peut retourner toujours dans le marquage initial, mais ce réseau n'est pas ni vivant, ni quasi-vivant car il existe les transitions t0, t1 et t2 qu'on ne franchit jamais donc elles ne sont pas ni vivantes, ni quasi-vivantes non plus; les transitions vivantes : t3 et t4;
   - avec un marquage initial : (0, 1, 0, 0); ici, après avoir franchi une transition t1 on va obtenir un seul jeton dans p3; donc un marquage (0, 0, 1, 0) qui correspond au cas précédent d'où le réseau est bien borné et sans blocage; de plus, on ne retournera jamais vers marquage initial alors le réseau n'est pas réversible; par contre il reste ni vivant, ni quasi-vivant car il y a des transitions t0 et t2 qu'on ne franchira jamais; les transitions vivantes : t3 et t4.
3. - avec un marquage initial : (3, 0, 0, 0) et avec Pre(p0, t0) := 3 et Post(p2, t0) := 1; le réseau est borné par 3, il est quasi-vivant car on peut franchir toutes les transitions à partir de celle initiale et il y a un blocage accessible (2, 0, 0, 0);
   - avec un marquage initial : (3, 0, 0, 0) et avec Pre(p0, t0) := 3; le réseau est borné par 3 et il est quasi-vivant car on peut franchir toutes les transitions à partir de celle initiale; par contre, il n'est pas réversible ni vivant et, par ailleurs, il n'y a aucun blocage;
   - on suppose que ce n'est pas possible de créer tel réseau parce qu'il semble que ces propriétés sont contradictoires pour ce graphe;
   - avec un marquage initial : (0, 0, 1, 1) et Post(p2, t0) := 1; par tina on peut vérifier que c'est bien le réseau borné par 2, vivant et réversible; 

Exercice 4
1. Reprenant le modèle de construction de voiture en bois et utilisant le simulateur pas-à-pas on peut voir qu'on a une seule transition avec laquelle on peut commencer. Cela c'est t0 (selon une notation fournie dans le fichier TD_ex4.ndr). Après, on a une possibilité de continuer indépendamment avec des transitions t1, t2 ou avec t4 (4 fois). Les séquences (t1, t2, t4, t4, t4, t4), (t1, t4, t2, t4, t4, t4), (t1, t4, t4, t2, t4, t4), ... , (t4, t4, t4, t4, t1, t2) sont donc bien réalisables. On peut compter toutes ces séquences réalisables théoriquement : étant donné n de transitions t4, on peut " diffuser " des transitions t1 et t2 entre elles de telle façon que t2 suit t1 avec (n+1) + n + (n-1) + ... + 2 + 1 = (n+2)(n+1)/2 manières différentes. Comme on a ici n=4, on a donc 5 * 6 / 2 = 15 telles séquences réalisables. Ensuite, on continue toujours avec une transition t3 qui nous conduit vers le marquage puits (0, 0, 0, 0, 0, 1). Par conséquent, on a 15 scénarios possibles à partir de marquage (1, 0, 0, 0, 0, 0) qui nous donnent toujours le même résultat au final.
On peut déduire ce nombre du graphe de marquages accessibles : celui correspond à nombre de chemins réalisables entre s(=start : marquage initial) et t(=termination : marquage final) dans ce graphe.
2. Dans cette partie de l'exercice, on observe comment le réseau fonctionne en mode temporisé.
3. On modélise le salon de barbier (deux versions avec et sans capacité d'une salle sont fournies dans les fichier TD_ex5_1.ndr et TD_ex5_2.ndr) par les réseaux de Petri. Pour une version avec une capacité on utilise, de plus, un réseau temporisé. On a une possibilité de vérifier que des réseaux fournis correspondent bien à la logique du problème du salon de barbier.


Exercice 5
On modélise un processus donné dans l'énoncé par un réseau de Petri fourni dans le fichier renduMonnaie.ndr. Bien que le graphe du réseau soit pas vraiment lisible, la logique du modèle est simple. Dans les états 50c_fournis, 1e_fournis et 2e_fournis on passe un nombre de pièces fournies de 50 centimes, 1 euro et 2 euros respectivement (1 seul jeton pour une seule pièce). Dans la condition quantité on passe un nombre des café qu'on voudrait acheter. Quand on atteint un blocage on peut avoir des jetons soit dans l'état manque d'argent, soit dans les états qté rendu1e et qté rendu50c. On atteint l'état manque d'argent si l'utilisateur a mis tel montant qui ne permet pas d'acheter nombre des tasses du café introduit. En outre, dans cet état on a un nombre de jetons qui correspond à l'argent manquant. En revanche, qté rendu1e et qté rendu50c sont remplis à la situation inversée. De plus, ces états indiquent combien de pièces de 1 euro et de 50 centimes respectivement on doit rendre à l'utilisateur. Si l'utilisateur a mis le montant exact tous ces trois états restent vide. La logique interne est aussi simple. On somme le montant que l'utilisateur doit régler et celui qu'il a inséré. Après, on calcule pas-à-pas une différence entre ces deux montants et on fait une conclusion s'il faut rendre quelque chose à l'utilisateur ou s'il ne faut pas. On préfère de rendre des pièces de 1 euro s'il y en a dans le stock.